<?xml version="1.0"?>
<launch>	  
  <arg name="sim" default="true" />
  
  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" default="false"/>
  </include>
  
  <!-- send robot urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find abb_irb120_gazebo)/urdf/irb120.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="irb120_gazebo_spawn" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model abb_irb120" respawn="false" output="screen"/>	

  <include file="$(find abb_irb120_control)/launch/irb120_moveit_control.launch" />

  <!-- Remap follow_joint_trajectory -->
  <remap if="$(arg sim)" from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>

  <!-- industrial_robot_simulator: accepts robot commands and reports status -->
  <node pkg="industrial_robot_simulator" type="industrial_robot_simulator" name="industrial_robot_simulator"/>
  
  <!-- joint_trajectory_action: provides actionlib interface for high-level robot control -->
  <node pkg="industrial_robot_client" type="joint_trajectory_action" name="joint_trajectory_action"/>

  <include file="$(find abb_irb120_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <include file="$(find abb_irb120_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
  </include>

</launch>